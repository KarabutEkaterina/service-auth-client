//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.6.2'.
//
package com.example.adapter;

import com.apollographql.apollo3.api.Adapter;
import com.apollographql.apollo3.api.Adapters;
import com.apollographql.apollo3.api.Assertions;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.NullableAdapter;
import com.apollographql.apollo3.api.ObjectAdapter;
import com.apollographql.apollo3.api.json.JsonReader;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.AutheticateUserQuery;
import com.example.type.Error;
import com.example.type.adapter.Error_ResponseAdapter;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.Arrays;
import java.util.List;

public class AutheticateUserQuery_ResponseAdapter {
  public enum Data implements Adapter<AutheticateUserQuery.Data> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("authenticateUser");

    @Override
    public AutheticateUserQuery.Data fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      AutheticateUserQuery.AuthenticateUser _authenticateUser = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _authenticateUser = new ObjectAdapter<AutheticateUserQuery.AuthenticateUser>(AuthenticateUser.INSTANCE, false).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      Assertions.checkFieldNotMissing(_authenticateUser, "authenticateUser");

      return new AutheticateUserQuery.Data(
        _authenticateUser
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        AutheticateUserQuery.Data value) throws IOException {
      writer.name("authenticateUser");
      new ObjectAdapter<AutheticateUserQuery.AuthenticateUser>(AuthenticateUser.INSTANCE, false).toJson(writer, customScalarAdapters, value.authenticateUser);
    }
  }

  public enum AuthenticateUser implements Adapter<AutheticateUserQuery.AuthenticateUser> {
    INSTANCE;

    private static final List<String> RESPONSE_NAMES = Arrays.asList("jwt", "error");

    @Override
    public AutheticateUserQuery.AuthenticateUser fromJson(JsonReader reader,
        CustomScalarAdapters customScalarAdapters) throws IOException {
      String _jwt = null;
      Error _error = null;

      loop:
      while(true) {
        switch (reader.selectName(RESPONSE_NAMES)) {
          case 0: _jwt = Adapters.NullableStringAdapter.fromJson(reader, customScalarAdapters); break;
          case 1: _error = new NullableAdapter<>(Error_ResponseAdapter.INSTANCE).fromJson(reader, customScalarAdapters); break;
          default: break loop;
        }
      }

      return new AutheticateUserQuery.AuthenticateUser(
        _jwt,
        _error
      );
    }

    @Override
    public void toJson(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
        AutheticateUserQuery.AuthenticateUser value) throws IOException {
      writer.name("jwt");
      Adapters.NullableStringAdapter.toJson(writer, customScalarAdapters, value.jwt);

      writer.name("error");
      new NullableAdapter<>(Error_ResponseAdapter.INSTANCE).toJson(writer, customScalarAdapters, value.error);
    }
  }
}
