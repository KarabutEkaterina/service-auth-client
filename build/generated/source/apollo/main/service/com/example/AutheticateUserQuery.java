// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.example.type.Error;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class AutheticateUserQuery implements Query<AutheticateUserQuery.Data, AutheticateUserQuery.Data, AutheticateUserQuery.Variables> {
  public static final String OPERATION_ID = "2ce3f7365d4580e95c966cfba6a65b502b4f0ff2b281a36a136fa79265f08306";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query AutheticateUser($email: String!, $password: String!) {\n"
        + "  authenticateUser(input: {email: $email, password: $password}) {\n"
        + "    __typename\n"
        + "    jwt\n"
        + "    error\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "AutheticateUser";
    }
  };

  private final AutheticateUserQuery.Variables variables;

  public AutheticateUserQuery(@NotNull String email, @NotNull String password) {
    Utils.checkNotNull(email, "email == null");
    Utils.checkNotNull(password, "password == null");
    variables = new AutheticateUserQuery.Variables(email, password);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public AutheticateUserQuery.Data wrapData(AutheticateUserQuery.Data data) {
    return data;
  }

  @Override
  public AutheticateUserQuery.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<AutheticateUserQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<AutheticateUserQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<AutheticateUserQuery.Data> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<AutheticateUserQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<AutheticateUserQuery.Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private @NotNull String email;

    private @NotNull String password;

    Builder() {
    }

    public Builder email(@NotNull String email) {
      this.email = email;
      return this;
    }

    public Builder password(@NotNull String password) {
      this.password = password;
      return this;
    }

    public AutheticateUserQuery build() {
      Utils.checkNotNull(email, "email == null");
      Utils.checkNotNull(password, "password == null");
      return new AutheticateUserQuery(email, password);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String email;

    private final @NotNull String password;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String email, @NotNull String password) {
      this.email = email;
      this.password = password;
      this.valueMap.put("email", email);
      this.valueMap.put("password", password);
    }

    public @NotNull String email() {
      return email;
    }

    public @NotNull String password() {
      return password;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeString("email", email);
          writer.writeString("password", password);
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("authenticateUser", "authenticateUser", new UnmodifiableMapBuilder<String, Object>(1)
      .put("input", new UnmodifiableMapBuilder<String, Object>(2)
        .put("email", new UnmodifiableMapBuilder<String, Object>(2)
          .put("kind", "Variable")
          .put("variableName", "email")
          .build())
        .put("password", new UnmodifiableMapBuilder<String, Object>(2)
          .put("kind", "Variable")
          .put("variableName", "password")
          .build())
        .build())
      .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull AuthenticateUser authenticateUser;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull AuthenticateUser authenticateUser) {
      this.authenticateUser = Utils.checkNotNull(authenticateUser, "authenticateUser == null");
    }

    /**
     * Аутентификация пользователя. Может вернуть ошибки: VALIDATION, NOT_FOUND, INVALID_CREDENTIALS
     */
    public @NotNull AuthenticateUser authenticateUser() {
      return this.authenticateUser;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], authenticateUser.marshaller());
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "authenticateUser=" + authenticateUser
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.authenticateUser.equals(that.authenticateUser);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= authenticateUser.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final AuthenticateUser.Mapper authenticateUserFieldMapper = new AuthenticateUser.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final AuthenticateUser authenticateUser = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<AuthenticateUser>() {
          @Override
          public AuthenticateUser read(ResponseReader reader) {
            return authenticateUserFieldMapper.map(reader);
          }
        });
        return new Data(authenticateUser);
      }
    }
  }

  public static class AuthenticateUser {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("jwt", "jwt", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("error", "error", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String jwt;

    final @Nullable Error error;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public AuthenticateUser(@NotNull String __typename, @Nullable String jwt,
        @Nullable Error error) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.jwt = jwt;
      this.error = error;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @Nullable String jwt() {
      return this.jwt;
    }

    public @Nullable Error error() {
      return this.error;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], jwt);
          writer.writeString($responseFields[2], error != null ? error.rawValue() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "AuthenticateUser{"
          + "__typename=" + __typename + ", "
          + "jwt=" + jwt + ", "
          + "error=" + error
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof AuthenticateUser) {
        AuthenticateUser that = (AuthenticateUser) o;
        return this.__typename.equals(that.__typename)
         && ((this.jwt == null) ? (that.jwt == null) : this.jwt.equals(that.jwt))
         && ((this.error == null) ? (that.error == null) : this.error.equals(that.error));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (jwt == null) ? 0 : jwt.hashCode();
        h *= 1000003;
        h ^= (error == null) ? 0 : error.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<AuthenticateUser> {
      @Override
      public AuthenticateUser map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String jwt = reader.readString($responseFields[1]);
        final String errorStr = reader.readString($responseFields[2]);
        final Error error;
        if (errorStr != null) {
          error = Error.safeValueOf(errorStr);
        } else {
          error = null;
        }
        return new AuthenticateUser(__typename, jwt, error);
      }
    }
  }
}
