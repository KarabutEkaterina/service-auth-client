// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.example.type.CustomType;
import com.example.type.Gender;
import com.example.type.Status;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class FindUsersQuery implements Query<FindUsersQuery.Data, FindUsersQuery.Data, FindUsersQuery.Variables> {
  public static final String OPERATION_ID = "ac2f3b881c37d4aa093417988e0d9a9ea262e5973ac4192eccea08541ddff74d";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query FindUsers($idAnyOf: [Int!]!) {\n"
        + "  findUsers(input: {idAnyOf: $idAnyOf}) {\n"
        + "    __typename\n"
        + "    users {\n"
        + "      __typename\n"
        + "      id\n"
        + "      firstName\n"
        + "      lastName\n"
        + "      email\n"
        + "      username\n"
        + "      createdAt\n"
        + "      updatedAt\n"
        + "      avatarImageId\n"
        + "      birthDate\n"
        + "      gender\n"
        + "      status\n"
        + "    }\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "FindUsers";
    }
  };

  private final FindUsersQuery.Variables variables;

  public FindUsersQuery(@NotNull List<Integer> idAnyOf) {
    Utils.checkNotNull(idAnyOf, "idAnyOf == null");
    variables = new FindUsersQuery.Variables(idAnyOf);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public FindUsersQuery.Data wrapData(FindUsersQuery.Data data) {
    return data;
  }

  @Override
  public FindUsersQuery.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<FindUsersQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<FindUsersQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<FindUsersQuery.Data> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<FindUsersQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<FindUsersQuery.Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private @NotNull List<Integer> idAnyOf;

    Builder() {
    }

    public Builder idAnyOf(@NotNull List<Integer> idAnyOf) {
      this.idAnyOf = idAnyOf;
      return this;
    }

    public FindUsersQuery build() {
      Utils.checkNotNull(idAnyOf, "idAnyOf == null");
      return new FindUsersQuery(idAnyOf);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull List<Integer> idAnyOf;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull List<Integer> idAnyOf) {
      this.idAnyOf = idAnyOf;
      this.valueMap.put("idAnyOf", idAnyOf);
    }

    public @NotNull List<Integer> idAnyOf() {
      return idAnyOf;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeList("idAnyOf", new InputFieldWriter.ListWriter() {
            @Override
            public void write(InputFieldWriter.ListItemWriter listItemWriter) throws IOException {
              for (final Integer $item : idAnyOf) {
                listItemWriter.writeInt($item);
              }
            }
          });
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("findUsers", "findUsers", new UnmodifiableMapBuilder<String, Object>(1)
      .put("input", new UnmodifiableMapBuilder<String, Object>(1)
        .put("idAnyOf", new UnmodifiableMapBuilder<String, Object>(2)
          .put("kind", "Variable")
          .put("variableName", "idAnyOf")
          .build())
        .build())
      .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull FindUsers findUsers;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull FindUsers findUsers) {
      this.findUsers = Utils.checkNotNull(findUsers, "findUsers == null");
    }

    /**
     * Поиск пользователей.
     */
    public @NotNull FindUsers findUsers() {
      return this.findUsers;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], findUsers.marshaller());
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "findUsers=" + findUsers
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.findUsers.equals(that.findUsers);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= findUsers.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final FindUsers.Mapper findUsersFieldMapper = new FindUsers.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final FindUsers findUsers = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<FindUsers>() {
          @Override
          public FindUsers read(ResponseReader reader) {
            return findUsersFieldMapper.map(reader);
          }
        });
        return new Data(findUsers);
      }
    }
  }

  public static class FindUsers {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forList("users", "users", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull List<User> users;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public FindUsers(@NotNull String __typename, @NotNull List<User> users) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.users = Utils.checkNotNull(users, "users == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull List<User> users() {
      return this.users;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeList($responseFields[1], users, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((User) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "FindUsers{"
          + "__typename=" + __typename + ", "
          + "users=" + users
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof FindUsers) {
        FindUsers that = (FindUsers) o;
        return this.__typename.equals(that.__typename)
         && this.users.equals(that.users);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= users.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<FindUsers> {
      final User.Mapper userFieldMapper = new User.Mapper();

      @Override
      public FindUsers map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final List<User> users = reader.readList($responseFields[1], new ResponseReader.ListReader<User>() {
          @Override
          public User read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<User>() {
              @Override
              public User read(ResponseReader reader) {
                return userFieldMapper.map(reader);
              }
            });
          }
        });
        return new FindUsers(__typename, users);
      }
    }
  }

  public static class User {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("id", "id", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("firstName", "firstName", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("lastName", "lastName", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("email", "email", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("username", "username", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("createdAt", "createdAt", null, false, CustomType.TIME, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("updatedAt", "updatedAt", null, false, CustomType.TIME, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("avatarImageId", "avatarImageId", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("birthDate", "birthDate", null, false, CustomType.TIME, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("gender", "gender", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("status", "status", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final int id;

    final @NotNull String firstName;

    final @NotNull String lastName;

    final @NotNull String email;

    final @NotNull String username;

    final @NotNull Object createdAt;

    final @NotNull Object updatedAt;

    final @Nullable Integer avatarImageId;

    final @NotNull Object birthDate;

    final @NotNull Gender gender;

    final @NotNull Status status;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public User(@NotNull String __typename, int id, @NotNull String firstName,
        @NotNull String lastName, @NotNull String email, @NotNull String username,
        @NotNull Object createdAt, @NotNull Object updatedAt, @Nullable Integer avatarImageId,
        @NotNull Object birthDate, @NotNull Gender gender, @NotNull Status status) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.id = id;
      this.firstName = Utils.checkNotNull(firstName, "firstName == null");
      this.lastName = Utils.checkNotNull(lastName, "lastName == null");
      this.email = Utils.checkNotNull(email, "email == null");
      this.username = Utils.checkNotNull(username, "username == null");
      this.createdAt = Utils.checkNotNull(createdAt, "createdAt == null");
      this.updatedAt = Utils.checkNotNull(updatedAt, "updatedAt == null");
      this.avatarImageId = avatarImageId;
      this.birthDate = Utils.checkNotNull(birthDate, "birthDate == null");
      this.gender = Utils.checkNotNull(gender, "gender == null");
      this.status = Utils.checkNotNull(status, "status == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public int id() {
      return this.id;
    }

    public @NotNull String firstName() {
      return this.firstName;
    }

    public @NotNull String lastName() {
      return this.lastName;
    }

    public @NotNull String email() {
      return this.email;
    }

    public @NotNull String username() {
      return this.username;
    }

    public @NotNull Object createdAt() {
      return this.createdAt;
    }

    public @NotNull Object updatedAt() {
      return this.updatedAt;
    }

    public @Nullable Integer avatarImageId() {
      return this.avatarImageId;
    }

    public @NotNull Object birthDate() {
      return this.birthDate;
    }

    public @NotNull Gender gender() {
      return this.gender;
    }

    public @NotNull Status status() {
      return this.status;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeInt($responseFields[1], id);
          writer.writeString($responseFields[2], firstName);
          writer.writeString($responseFields[3], lastName);
          writer.writeString($responseFields[4], email);
          writer.writeString($responseFields[5], username);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[6], createdAt);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[7], updatedAt);
          writer.writeInt($responseFields[8], avatarImageId);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[9], birthDate);
          writer.writeString($responseFields[10], gender.rawValue());
          writer.writeString($responseFields[11], status.rawValue());
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "User{"
          + "__typename=" + __typename + ", "
          + "id=" + id + ", "
          + "firstName=" + firstName + ", "
          + "lastName=" + lastName + ", "
          + "email=" + email + ", "
          + "username=" + username + ", "
          + "createdAt=" + createdAt + ", "
          + "updatedAt=" + updatedAt + ", "
          + "avatarImageId=" + avatarImageId + ", "
          + "birthDate=" + birthDate + ", "
          + "gender=" + gender + ", "
          + "status=" + status
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof User) {
        User that = (User) o;
        return this.__typename.equals(that.__typename)
         && this.id == that.id
         && this.firstName.equals(that.firstName)
         && this.lastName.equals(that.lastName)
         && this.email.equals(that.email)
         && this.username.equals(that.username)
         && this.createdAt.equals(that.createdAt)
         && this.updatedAt.equals(that.updatedAt)
         && ((this.avatarImageId == null) ? (that.avatarImageId == null) : this.avatarImageId.equals(that.avatarImageId))
         && this.birthDate.equals(that.birthDate)
         && this.gender.equals(that.gender)
         && this.status.equals(that.status);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= id;
        h *= 1000003;
        h ^= firstName.hashCode();
        h *= 1000003;
        h ^= lastName.hashCode();
        h *= 1000003;
        h ^= email.hashCode();
        h *= 1000003;
        h ^= username.hashCode();
        h *= 1000003;
        h ^= createdAt.hashCode();
        h *= 1000003;
        h ^= updatedAt.hashCode();
        h *= 1000003;
        h ^= (avatarImageId == null) ? 0 : avatarImageId.hashCode();
        h *= 1000003;
        h ^= birthDate.hashCode();
        h *= 1000003;
        h ^= gender.hashCode();
        h *= 1000003;
        h ^= status.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<User> {
      @Override
      public User map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final int id = reader.readInt($responseFields[1]);
        final String firstName = reader.readString($responseFields[2]);
        final String lastName = reader.readString($responseFields[3]);
        final String email = reader.readString($responseFields[4]);
        final String username = reader.readString($responseFields[5]);
        final Object createdAt = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[6]);
        final Object updatedAt = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[7]);
        final Integer avatarImageId = reader.readInt($responseFields[8]);
        final Object birthDate = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[9]);
        final String genderStr = reader.readString($responseFields[10]);
        final Gender gender;
        if (genderStr != null) {
          gender = Gender.safeValueOf(genderStr);
        } else {
          gender = null;
        }
        final String statusStr = reader.readString($responseFields[11]);
        final Status status;
        if (statusStr != null) {
          status = Status.safeValueOf(statusStr);
        } else {
          status = null;
        }
        return new User(__typename, id, firstName, lastName, email, username, createdAt, updatedAt, avatarImageId, birthDate, gender, status);
      }
    }
  }
}
